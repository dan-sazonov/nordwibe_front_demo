"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-insta-stories";
exports.ids = ["vendor-chunks/react-insta-stories"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-insta-stories/dist/index.js":
/*!********************************************************!*\
  !*** ./node_modules/react-insta-stories/dist/index.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n(function webpackUniversalModuleDefinition(root, factory) {\n    if (true) module.exports = factory(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\n    else {}\n})(void 0, (__WEBPACK_EXTERNAL_MODULE__639__)=>{\n    return /******/ (()=>{\n        /******/ \"use strict\";\n        /******/ var __webpack_modules__ = {\n            /***/ 931: /***/ (__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_664__)=>{\n                __nested_webpack_require_664__.r(__nested_webpack_exports__);\n                /* harmony export */ __nested_webpack_require_664__.d(__nested_webpack_exports__, {\n                    /* harmony export */ \"default\": ()=>__WEBPACK_DEFAULT_EXPORT__\n                });\n                /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_664__(639);\n                /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __nested_webpack_require_664__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n                var _excluded = [\n                    \"styles\"\n                ];\n                function _extends() {\n                    _extends = Object.assign ? Object.assign.bind() : function(target) {\n                        for(var i = 1; i < arguments.length; i++){\n                            var source = arguments[i];\n                            for(var key in source){\n                                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                                    target[key] = source[key];\n                                }\n                            }\n                        }\n                        return target;\n                    };\n                    return _extends.apply(this, arguments);\n                }\n                function _objectWithoutProperties(source, excluded) {\n                    if (source == null) return {};\n                    var target = _objectWithoutPropertiesLoose(source, excluded);\n                    var key, i;\n                    if (Object.getOwnPropertySymbols) {\n                        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n                        for(i = 0; i < sourceSymbolKeys.length; i++){\n                            key = sourceSymbolKeys[i];\n                            if (excluded.indexOf(key) >= 0) continue;\n                            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n                            target[key] = source[key];\n                        }\n                    }\n                    return target;\n                }\n                function _objectWithoutPropertiesLoose(source, excluded) {\n                    if (source == null) return {};\n                    var target = {};\n                    var sourceKeys = Object.keys(source);\n                    var key, i;\n                    for(i = 0; i < sourceKeys.length; i++){\n                        key = sourceKeys[i];\n                        if (excluded.indexOf(key) >= 0) continue;\n                        target[key] = source[key];\n                    }\n                    return target;\n                }\n                /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = function(_ref) {\n                    var _ref$styles = _ref.styles, styles = _ref$styles === void 0 ? {} : _ref$styles, props = _objectWithoutProperties(_ref, _excluded);\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", _extends({\n                        width: \"44\",\n                        height: \"44\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        stroke: \"#fff\"\n                    }, props), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n                        fill: \"none\",\n                        fillRule: \"evenodd\",\n                        strokeWidth: \"2\"\n                    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"circle\", {\n                        cx: \"22\",\n                        cy: \"22\",\n                        r: \"1\"\n                    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"animate\", {\n                        attributeName: \"r\",\n                        begin: \"0s\",\n                        dur: \"1.8s\",\n                        values: \"1; 20\",\n                        calcMode: \"spline\",\n                        keyTimes: \"0; 1\",\n                        keySplines: \"0.165, 0.84, 0.44, 1\",\n                        repeatCount: \"indefinite\"\n                    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"animate\", {\n                        attributeName: \"stroke-opacity\",\n                        begin: \"0s\",\n                        dur: \"1.8s\",\n                        values: \"1; 0\",\n                        calcMode: \"spline\",\n                        keyTimes: \"0; 1\",\n                        keySplines: \"0.3, 0.61, 0.355, 1\",\n                        repeatCount: \"indefinite\"\n                    })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"circle\", {\n                        cx: \"22\",\n                        cy: \"22\",\n                        r: \"1\"\n                    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"animate\", {\n                        attributeName: \"r\",\n                        begin: \"-0.9s\",\n                        dur: \"1.8s\",\n                        values: \"1; 20\",\n                        calcMode: \"spline\",\n                        keyTimes: \"0; 1\",\n                        keySplines: \"0.165, 0.84, 0.44, 1\",\n                        repeatCount: \"indefinite\"\n                    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"animate\", {\n                        attributeName: \"stroke-opacity\",\n                        begin: \"-0.9s\",\n                        dur: \"1.8s\",\n                        values: \"1; 0\",\n                        calcMode: \"spline\",\n                        keyTimes: \"0; 1\",\n                        keySplines: \"0.3, 0.61, 0.355, 1\",\n                        repeatCount: \"indefinite\"\n                    }))));\n                };\n            /***/ },\n            /***/ 120: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_6559__) {\n                function _slicedToArray(arr, i) {\n                    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n                }\n                function _nonIterableRest() {\n                    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n                }\n                function _unsupportedIterableToArray(o, minLen) {\n                    if (!o) return;\n                    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n                    var n = Object.prototype.toString.call(o).slice(8, -1);\n                    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n                    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n                    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n                }\n                function _arrayLikeToArray(arr, len) {\n                    if (len == null || len > arr.length) len = arr.length;\n                    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n                    return arr2;\n                }\n                function _iterableToArrayLimit(arr, i) {\n                    var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n                    if (null != _i) {\n                        var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;\n                        try {\n                            if (_x = (_i = _i.call(arr)).next, 0 === i) {\n                                if (Object(_i) !== _i) return;\n                                _n = !1;\n                            } else for(; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n                        } catch (err) {\n                            _d = !0, _e = err;\n                        } finally{\n                            try {\n                                if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n                            } finally{\n                                if (_d) throw _e;\n                            }\n                        }\n                        return _arr;\n                    }\n                }\n                function _arrayWithHoles(arr) {\n                    if (Array.isArray(arr)) return arr;\n                }\n                var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    var desc = Object.getOwnPropertyDescriptor(m, k);\n                    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n                        desc = {\n                            enumerable: true,\n                            get: function get() {\n                                return m[k];\n                            }\n                        };\n                    }\n                    Object.defineProperty(o, k2, desc);\n                } : function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    o[k2] = m[k];\n                });\n                var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n                    Object.defineProperty(o, \"default\", {\n                        enumerable: true,\n                        value: v\n                    });\n                } : function(o, v) {\n                    o[\"default\"] = v;\n                });\n                var __importStar = this && this.__importStar || function(mod) {\n                    if (mod && mod.__esModule) return mod;\n                    var result = {};\n                    if (mod != null) {\n                        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n                    }\n                    __setModuleDefault(result, mod);\n                    return result;\n                };\n                var __importDefault = this && this.__importDefault || function(mod) {\n                    return mod && mod.__esModule ? mod : {\n                        \"default\": mod\n                    };\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                var react_1 = __importStar(__nested_webpack_require_6559__(639));\n                var Global_1 = __importDefault(__nested_webpack_require_6559__(267));\n                var Stories_1 = __importDefault(__nested_webpack_require_6559__(486));\n                var Progress_1 = __importDefault(__nested_webpack_require_6559__(552));\n                var Story_1 = __importDefault(__nested_webpack_require_6559__(832));\n                var ProgressArray_1 = __importDefault(__nested_webpack_require_6559__(913));\n                var use_is_mounted_1 = __importDefault(__nested_webpack_require_6559__(342));\n                var usePreLoader_1 = __nested_webpack_require_6559__(402);\n                function default_1() {\n                    var _ref = (0, react_1.useState)(0), _ref2 = _slicedToArray(_ref, 2), currentId = _ref2[0], setCurrentId = _ref2[1];\n                    var _ref3 = (0, react_1.useState)(true), _ref4 = _slicedToArray(_ref3, 2), pause = _ref4[0], setPause = _ref4[1];\n                    var _ref5 = (0, react_1.useState)(true), _ref6 = _slicedToArray(_ref5, 2), bufferAction = _ref6[0], setBufferAction = _ref6[1];\n                    var _ref7 = (0, react_1.useState)(0), _ref8 = _slicedToArray(_ref7, 2), videoDuration = _ref8[0], setVideoDuration = _ref8[1];\n                    var isMounted = (0, use_is_mounted_1[\"default\"])();\n                    var mousedownId = (0, react_1.useRef)();\n                    var _ref9 = (0, react_1.useContext)(Global_1[\"default\"]), width = _ref9.width, height = _ref9.height, loop = _ref9.loop, currentIndex = _ref9.currentIndex, isPaused = _ref9.isPaused, keyboardNavigation = _ref9.keyboardNavigation, preventDefault = _ref9.preventDefault, _ref9$storyContainerS = _ref9.storyContainerStyles, storyContainerStyles = _ref9$storyContainerS === void 0 ? {} : _ref9$storyContainerS, onAllStoriesEnd = _ref9.onAllStoriesEnd, onPrevious = _ref9.onPrevious, onNext = _ref9.onNext, preloadCount = _ref9.preloadCount;\n                    var _ref10 = (0, react_1.useContext)(Stories_1[\"default\"]), stories = _ref10.stories;\n                    (0, usePreLoader_1.usePreLoader)(stories, currentId, preloadCount);\n                    (0, react_1.useEffect)(function() {\n                        if (typeof currentIndex === \"number\") {\n                            if (currentIndex >= 0 && currentIndex < stories.length) {\n                                setCurrentIdWrapper(function() {\n                                    return currentIndex;\n                                });\n                            } else {\n                                console.error(\"Index out of bounds. Current index was set to value more than the length of stories array.\", currentIndex);\n                            }\n                        }\n                    }, [\n                        currentIndex\n                    ]);\n                    (0, react_1.useEffect)(function() {\n                        if (typeof isPaused === \"boolean\") {\n                            setPause(isPaused);\n                        }\n                    }, [\n                        isPaused\n                    ]);\n                    (0, react_1.useEffect)(function() {\n                        var isClient =  false && 0;\n                        if (isClient && typeof keyboardNavigation === \"boolean\" && keyboardNavigation) {\n                            document.addEventListener(\"keydown\", handleKeyDown);\n                            return function() {\n                                document.removeEventListener(\"keydown\", handleKeyDown);\n                            };\n                        }\n                    }, [\n                        keyboardNavigation\n                    ]);\n                    var handleKeyDown = function handleKeyDown(e) {\n                        if (e.key === \"ArrowLeft\") {\n                            previous();\n                        } else if (e.key === \"ArrowRight\") {\n                            next({\n                                isSkippedByUser: true\n                            });\n                        }\n                    };\n                    var toggleState = function toggleState(action, bufferAction) {\n                        setPause(action === \"pause\");\n                        setBufferAction(!!bufferAction);\n                    };\n                    var setCurrentIdWrapper = function setCurrentIdWrapper(callback) {\n                        setCurrentId(callback);\n                        toggleState(\"pause\", true);\n                    };\n                    var previous = function previous() {\n                        if (onPrevious != undefined) {\n                            onPrevious();\n                        }\n                        setCurrentIdWrapper(function(prev) {\n                            return prev > 0 ? prev - 1 : prev;\n                        });\n                    };\n                    var next = function next(options) {\n                        if (onNext != undefined && (options === null || options === void 0 ? void 0 : options.isSkippedByUser)) {\n                            onNext();\n                        }\n                        // Check if component is mounted - for issue #130 (https://github.com/mohitk05/react-insta-stories/issues/130)\n                        if (isMounted()) {\n                            if (loop) {\n                                updateNextStoryIdForLoop();\n                            } else {\n                                updateNextStoryId();\n                            }\n                        }\n                    };\n                    var updateNextStoryIdForLoop = function updateNextStoryIdForLoop() {\n                        setCurrentIdWrapper(function(prev) {\n                            if (prev >= stories.length - 1) {\n                                onAllStoriesEnd && onAllStoriesEnd(currentId, stories);\n                            }\n                            return (prev + 1) % stories.length;\n                        });\n                    };\n                    var updateNextStoryId = function updateNextStoryId() {\n                        setCurrentIdWrapper(function(prev) {\n                            if (prev < stories.length - 1) return prev + 1;\n                            onAllStoriesEnd && onAllStoriesEnd(currentId, stories);\n                            return prev;\n                        });\n                    };\n                    var debouncePause = function debouncePause(e) {\n                        e.preventDefault();\n                        mousedownId.current = setTimeout(function() {\n                            toggleState(\"pause\");\n                        }, 200);\n                    };\n                    var mouseUp = function mouseUp(type) {\n                        return function(e) {\n                            e.preventDefault();\n                            mousedownId.current && clearTimeout(mousedownId.current);\n                            if (pause) {\n                                toggleState(\"play\");\n                            } else {\n                                type === \"next\" ? next({\n                                    isSkippedByUser: true\n                                }) : previous();\n                            }\n                        };\n                    };\n                    var getVideoDuration = function getVideoDuration(duration) {\n                        setVideoDuration(duration * 1000);\n                    };\n                    return react_1[\"default\"].createElement(\"div\", {\n                        style: Object.assign(Object.assign(Object.assign({}, styles.container), storyContainerStyles), {\n                            width: width,\n                            height: height\n                        })\n                    }, react_1[\"default\"].createElement(Progress_1[\"default\"].Provider, {\n                        value: {\n                            bufferAction: bufferAction,\n                            videoDuration: videoDuration,\n                            currentId: currentId,\n                            pause: pause,\n                            next: next\n                        }\n                    }, react_1[\"default\"].createElement(ProgressArray_1[\"default\"], null)), react_1[\"default\"].createElement(Story_1[\"default\"], {\n                        action: toggleState,\n                        bufferAction: bufferAction,\n                        playState: pause,\n                        story: stories[currentId],\n                        getVideoDuration: getVideoDuration\n                    }), !preventDefault && react_1[\"default\"].createElement(\"div\", {\n                        style: styles.overlay\n                    }, react_1[\"default\"].createElement(\"div\", {\n                        style: {\n                            width: \"50%\",\n                            zIndex: 999\n                        },\n                        onTouchStart: debouncePause,\n                        onTouchEnd: mouseUp(\"previous\"),\n                        onMouseDown: debouncePause,\n                        onMouseUp: mouseUp(\"previous\")\n                    }), react_1[\"default\"].createElement(\"div\", {\n                        style: {\n                            width: \"50%\",\n                            zIndex: 999\n                        },\n                        onTouchStart: debouncePause,\n                        onTouchEnd: mouseUp(\"next\"),\n                        onMouseDown: debouncePause,\n                        onMouseUp: mouseUp(\"next\")\n                    })));\n                }\n                exports1[\"default\"] = default_1;\n                var styles = {\n                    container: {\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        background: \"#111\",\n                        position: \"relative\",\n                        WebkitUserSelect: \"none\"\n                    },\n                    overlay: {\n                        position: \"absolute\",\n                        height: \"inherit\",\n                        width: \"inherit\",\n                        display: \"flex\"\n                    }\n                };\n            /***/ },\n            /***/ 463: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_21354__) {\n                var __importDefault = this && this.__importDefault || function(mod) {\n                    return mod && mod.__esModule ? mod : {\n                        \"default\": mod\n                    };\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                var react_1 = __importDefault(__nested_webpack_require_21354__(639));\n                var Header = function Header(_ref) {\n                    var profileImage = _ref.profileImage, heading = _ref.heading, subheading = _ref.subheading;\n                    return react_1[\"default\"].createElement(\"div\", {\n                        style: styles.main\n                    }, profileImage && react_1[\"default\"].createElement(\"img\", {\n                        style: styles.img,\n                        src: profileImage\n                    }), react_1[\"default\"].createElement(\"span\", {\n                        style: styles.text\n                    }, react_1[\"default\"].createElement(\"p\", {\n                        style: styles.heading\n                    }, heading), react_1[\"default\"].createElement(\"p\", {\n                        style: styles.subheading\n                    }, subheading)));\n                };\n                var styles = {\n                    main: {\n                        display: \"flex\",\n                        alignItems: \"center\"\n                    },\n                    img: {\n                        width: 40,\n                        height: 40,\n                        borderRadius: 40,\n                        marginRight: 10,\n                        filter: \"drop-shadow(0 0px 2px rgba(0, 0, 0, 0.5))\",\n                        border: \"2px solid rgba(255, 255, 255, 0.8)\"\n                    },\n                    text: {\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        filter: \"drop-shadow(0 0px 3px rgba(0, 0, 0, 0.9))\"\n                    },\n                    heading: {\n                        fontSize: \"1rem\",\n                        color: \"rgba(255, 255, 255, 0.9)\",\n                        margin: 0,\n                        marginBottom: 2\n                    },\n                    subheading: {\n                        fontSize: \"0.6rem\",\n                        color: \"rgba(255, 255, 255, 0.8)\",\n                        margin: 0\n                    }\n                };\n                exports1[\"default\"] = Header;\n            /***/ },\n            /***/ 911: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_23950__) {\n                var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    var desc = Object.getOwnPropertyDescriptor(m, k);\n                    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n                        desc = {\n                            enumerable: true,\n                            get: function get() {\n                                return m[k];\n                            }\n                        };\n                    }\n                    Object.defineProperty(o, k2, desc);\n                } : function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    o[k2] = m[k];\n                });\n                var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n                    Object.defineProperty(o, \"default\", {\n                        enumerable: true,\n                        value: v\n                    });\n                } : function(o, v) {\n                    o[\"default\"] = v;\n                });\n                var __importStar = this && this.__importStar || function(mod) {\n                    if (mod && mod.__esModule) return mod;\n                    var result = {};\n                    if (mod != null) {\n                        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n                    }\n                    __setModuleDefault(result, mod);\n                    return result;\n                };\n                var __importDefault = this && this.__importDefault || function(mod) {\n                    return mod && mod.__esModule ? mod : {\n                        \"default\": mod\n                    };\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                var react_1 = __importStar(__nested_webpack_require_23950__(639));\n                var ProgressWrapper_1 = __importDefault(__nested_webpack_require_23950__(424));\n                var Global_1 = __importDefault(__nested_webpack_require_23950__(267));\n                var Progress_1 = __importDefault(__nested_webpack_require_23950__(552));\n                exports1[\"default\"] = function(props) {\n                    var _ref = (0, react_1.useContext)(Global_1[\"default\"]), progressStyles = _ref.progressStyles;\n                    var _ref2 = (0, react_1.useContext)(Progress_1[\"default\"]), bufferAction = _ref2.bufferAction, pause = _ref2.pause;\n                    var getProgressStyle = function getProgressStyle(_ref3) {\n                        var active = _ref3.active;\n                        switch(active){\n                            case 2:\n                                return {\n                                    width: \"100%\"\n                                };\n                            case 1:\n                                return {\n                                    transform: \"scaleX(\".concat(props.count / 100, \")\")\n                                };\n                            case 0:\n                                return {\n                                    width: 0\n                                };\n                            default:\n                                return {\n                                    width: 0\n                                };\n                        }\n                    };\n                    var width = props.width, active = props.active;\n                    return react_1[\"default\"].createElement(ProgressWrapper_1[\"default\"], {\n                        width: width,\n                        pause: pause,\n                        bufferAction: bufferAction\n                    }, react_1[\"default\"].createElement(\"div\", {\n                        style: Object.assign(Object.assign(Object.assign({}, styles.inner), progressStyles), getProgressStyle({\n                            active: active\n                        }))\n                    }));\n                };\n                var styles = {\n                    inner: {\n                        background: \"#fff\",\n                        height: \"100%\",\n                        maxWidth: \"100%\",\n                        borderRadius: 2,\n                        transformOrigin: \"center left\",\n                        WebkitBackfaceVisibility: \"hidden\",\n                        MozBackfaceVisibility: \"hidden\",\n                        msBackfaceVisibility: \"hidden\",\n                        backfaceVisibility: \"hidden\",\n                        WebkitPerspective: 1000,\n                        MozPerspective: 1000,\n                        msPerspective: 1000,\n                        perspective: 1000\n                    }\n                };\n            /***/ },\n            /***/ 913: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_28884__) {\n                function _slicedToArray(arr, i) {\n                    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n                }\n                function _nonIterableRest() {\n                    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n                }\n                function _unsupportedIterableToArray(o, minLen) {\n                    if (!o) return;\n                    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n                    var n = Object.prototype.toString.call(o).slice(8, -1);\n                    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n                    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n                    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n                }\n                function _arrayLikeToArray(arr, len) {\n                    if (len == null || len > arr.length) len = arr.length;\n                    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n                    return arr2;\n                }\n                function _iterableToArrayLimit(arr, i) {\n                    var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n                    if (null != _i) {\n                        var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;\n                        try {\n                            if (_x = (_i = _i.call(arr)).next, 0 === i) {\n                                if (Object(_i) !== _i) return;\n                                _n = !1;\n                            } else for(; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n                        } catch (err) {\n                            _d = !0, _e = err;\n                        } finally{\n                            try {\n                                if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n                            } finally{\n                                if (_d) throw _e;\n                            }\n                        }\n                        return _arr;\n                    }\n                }\n                function _arrayWithHoles(arr) {\n                    if (Array.isArray(arr)) return arr;\n                }\n                var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    var desc = Object.getOwnPropertyDescriptor(m, k);\n                    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n                        desc = {\n                            enumerable: true,\n                            get: function get() {\n                                return m[k];\n                            }\n                        };\n                    }\n                    Object.defineProperty(o, k2, desc);\n                } : function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    o[k2] = m[k];\n                });\n                var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n                    Object.defineProperty(o, \"default\", {\n                        enumerable: true,\n                        value: v\n                    });\n                } : function(o, v) {\n                    o[\"default\"] = v;\n                });\n                var __importStar = this && this.__importStar || function(mod) {\n                    if (mod && mod.__esModule) return mod;\n                    var result = {};\n                    if (mod != null) {\n                        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n                    }\n                    __setModuleDefault(result, mod);\n                    return result;\n                };\n                var __importDefault = this && this.__importDefault || function(mod) {\n                    return mod && mod.__esModule ? mod : {\n                        \"default\": mod\n                    };\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                var react_1 = __importStar(__nested_webpack_require_28884__(639));\n                var Progress_1 = __importDefault(__nested_webpack_require_28884__(911));\n                var Progress_2 = __importDefault(__nested_webpack_require_28884__(552));\n                var Global_1 = __importDefault(__nested_webpack_require_28884__(267));\n                var Stories_1 = __importDefault(__nested_webpack_require_28884__(486));\n                var time_1 = __nested_webpack_require_28884__(335);\n                exports1[\"default\"] = function() {\n                    var _ref = (0, react_1.useState)(0), _ref2 = _slicedToArray(_ref, 2), count = _ref2[0], setCount = _ref2[1];\n                    var lastTime = (0, react_1.useRef)();\n                    var _ref3 = (0, react_1.useContext)(Progress_2[\"default\"]), currentId = _ref3.currentId, next = _ref3.next, videoDuration = _ref3.videoDuration, pause = _ref3.pause, bufferAction = _ref3.bufferAction;\n                    var _ref4 = (0, react_1.useContext)(Global_1[\"default\"]), defaultInterval = _ref4.defaultInterval, onStoryEnd = _ref4.onStoryEnd, onStoryStart = _ref4.onStoryStart, progressContainerStyles = _ref4.progressContainerStyles;\n                    var _ref5 = (0, react_1.useContext)(Stories_1[\"default\"]), stories = _ref5.stories;\n                    (0, react_1.useEffect)(function() {\n                        setCount(0);\n                    }, [\n                        currentId,\n                        stories\n                    ]);\n                    (0, react_1.useEffect)(function() {\n                        if (!pause) {\n                            animationFrameId.current = requestAnimationFrame(incrementCount);\n                            lastTime.current = (0, time_1.timestamp)();\n                        }\n                        return function() {\n                            cancelAnimationFrame(animationFrameId.current);\n                        };\n                    }, [\n                        currentId,\n                        pause\n                    ]);\n                    var animationFrameId = (0, react_1.useRef)();\n                    var countCopy = count;\n                    var incrementCount = function incrementCount() {\n                        if (countCopy === 0) storyStartCallback();\n                        if (lastTime.current == undefined) lastTime.current = (0, time_1.timestamp)();\n                        var t = (0, time_1.timestamp)();\n                        var dt = t - lastTime.current;\n                        lastTime.current = t;\n                        setCount(function(count) {\n                            var interval = getCurrentInterval();\n                            countCopy = count + dt * 100 / interval;\n                            return countCopy;\n                        });\n                        if (countCopy < 100) {\n                            animationFrameId.current = requestAnimationFrame(incrementCount);\n                        } else {\n                            storyEndCallback();\n                            cancelAnimationFrame(animationFrameId.current);\n                            next();\n                        }\n                    };\n                    var storyStartCallback = function storyStartCallback() {\n                        onStoryStart && onStoryStart(currentId, stories[currentId]);\n                    };\n                    var storyEndCallback = function storyEndCallback() {\n                        onStoryEnd && onStoryEnd(currentId, stories[currentId]);\n                    };\n                    var getCurrentInterval = function getCurrentInterval() {\n                        if (stories[currentId].type === \"video\") return videoDuration;\n                        if (typeof stories[currentId].duration === \"number\") return stories[currentId].duration;\n                        return defaultInterval;\n                    };\n                    var opacityStyles = {\n                        opacity: pause && !bufferAction ? 0 : 1\n                    };\n                    return react_1[\"default\"].createElement(\"div\", {\n                        style: Object.assign(Object.assign(Object.assign({}, styles.progressArr), progressContainerStyles), opacityStyles)\n                    }, stories.map(function(_, i) {\n                        return react_1[\"default\"].createElement(Progress_1[\"default\"], {\n                            key: i,\n                            count: count,\n                            width: 1 / stories.length,\n                            active: i === currentId ? 1 : i < currentId ? 2 : 0\n                        });\n                    }));\n                };\n                var styles = {\n                    progressArr: {\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        maxWidth: \"100%\",\n                        flexWrap: \"nowrap\",\n                        position: \"absolute\",\n                        width: \"98%\",\n                        padding: 5,\n                        paddingTop: 7,\n                        alignSelf: \"center\",\n                        zIndex: 1001,\n                        filter: \"drop-shadow(0 1px 8px #222)\",\n                        transition: \"opacity 400ms ease-in-out\"\n                    }\n                };\n            /***/ },\n            /***/ 424: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_38788__) {\n                var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    var desc = Object.getOwnPropertyDescriptor(m, k);\n                    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n                        desc = {\n                            enumerable: true,\n                            get: function get() {\n                                return m[k];\n                            }\n                        };\n                    }\n                    Object.defineProperty(o, k2, desc);\n                } : function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    o[k2] = m[k];\n                });\n                var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n                    Object.defineProperty(o, \"default\", {\n                        enumerable: true,\n                        value: v\n                    });\n                } : function(o, v) {\n                    o[\"default\"] = v;\n                });\n                var __importStar = this && this.__importStar || function(mod) {\n                    if (mod && mod.__esModule) return mod;\n                    var result = {};\n                    if (mod != null) {\n                        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n                    }\n                    __setModuleDefault(result, mod);\n                    return result;\n                };\n                var __importDefault = this && this.__importDefault || function(mod) {\n                    return mod && mod.__esModule ? mod : {\n                        \"default\": mod\n                    };\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                var react_1 = __importStar(__nested_webpack_require_38788__(639));\n                var Global_1 = __importDefault(__nested_webpack_require_38788__(267));\n                var ProgressWrapper = function ProgressWrapper(props) {\n                    var _ref = (0, react_1.useContext)(Global_1[\"default\"]), progressWrapperStyles = _ref.progressWrapperStyles;\n                    return react_1[\"default\"].createElement(\"div\", {\n                        style: Object.assign(Object.assign(Object.assign({}, styles.progress), progressWrapperStyles), getProgressWrapperStyle(props))\n                    }, props.children);\n                };\n                var getProgressWrapperStyle = function getProgressWrapperStyle(_ref2) {\n                    var width = _ref2.width;\n                    return {\n                        width: \"\".concat(width * 100, \"%\")\n                    };\n                };\n                var styles = {\n                    progress: {\n                        height: 2,\n                        maxWidth: \"100%\",\n                        background: \"#555\",\n                        margin: 2,\n                        borderRadius: 2,\n                        WebkitBackfaceVisibility: \"hidden\",\n                        MozBackfaceVisibility: \"hidden\",\n                        msBackfaceVisibility: \"hidden\",\n                        backfaceVisibility: \"hidden\"\n                    }\n                };\n                exports1[\"default\"] = ProgressWrapper;\n            /***/ },\n            /***/ 771: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_42358__) {\n                var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    var desc = Object.getOwnPropertyDescriptor(m, k);\n                    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n                        desc = {\n                            enumerable: true,\n                            get: function get() {\n                                return m[k];\n                            }\n                        };\n                    }\n                    Object.defineProperty(o, k2, desc);\n                } : function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    o[k2] = m[k];\n                });\n                var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n                    Object.defineProperty(o, \"default\", {\n                        enumerable: true,\n                        value: v\n                    });\n                } : function(o, v) {\n                    o[\"default\"] = v;\n                });\n                var __importStar = this && this.__importStar || function(mod) {\n                    if (mod && mod.__esModule) return mod;\n                    var result = {};\n                    if (mod != null) {\n                        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n                    }\n                    __setModuleDefault(result, mod);\n                    return result;\n                };\n                var __importDefault = this && this.__importDefault || function(mod) {\n                    return mod && mod.__esModule ? mod : {\n                        \"default\": mod\n                    };\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                var react_1 = __importStar(__nested_webpack_require_42358__(639));\n                var Global_1 = __importDefault(__nested_webpack_require_42358__(267));\n                function seeMore(props) {\n                    var SeeMoreContent = props.seeMoreContent;\n                    var CustomCollapsed = props.customCollapsed;\n                    var _ref = (0, react_1.useContext)(Global_1[\"default\"]), keyboardNavigation = _ref.keyboardNavigation;\n                    (0, react_1.useEffect)(function() {\n                        var isClient =  false && 0;\n                        if (isClient && typeof keyboardNavigation === \"boolean\" && keyboardNavigation) {\n                            document.addEventListener(\"keydown\", handleKeyDown);\n                            return function() {\n                                document.removeEventListener(\"keydown\", handleKeyDown);\n                            };\n                        }\n                    }, [\n                        keyboardNavigation\n                    ]);\n                    var handleKeyDown = function handleKeyDown(e) {\n                        if (e.key === \"ArrowUp\") {\n                            e.preventDefault();\n                            props.toggleMore(true);\n                        } else if (e.key === \"ArrowDown\" || e.key === \"Escape\") {\n                            e.preventDefault();\n                            props.toggleMore(false);\n                        }\n                    };\n                    return props.showContent ? react_1[\"default\"].createElement(\"div\", {\n                        style: styles.seeMoreExpanded\n                    }, react_1[\"default\"].createElement(SeeMoreContent, {\n                        close: function close() {\n                            return props.toggleMore(false);\n                        }\n                    })) : CustomCollapsed ? react_1[\"default\"].createElement(CustomCollapsed, {\n                        action: props.action,\n                        toggleMore: props.toggleMore\n                    }) : react_1[\"default\"].createElement(\"div\", {\n                        style: styles.seeMore,\n                        onClick: function onClick(e) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            props.toggleMore(true);\n                        }\n                    }, react_1[\"default\"].createElement(\"span\", {\n                        style: styles.seeMoreIcon\n                    }, \"⌃\"), react_1[\"default\"].createElement(\"span\", {\n                        style: styles.seeMoreText\n                    }, \"See more\"));\n                }\n                exports1[\"default\"] = seeMore;\n                var styles = {\n                    seeMore: {\n                        height: \"10vh\",\n                        background: \"linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.2))\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        width: \"100%\",\n                        alignItems: \"center\",\n                        justifyContent: \"flex-end\",\n                        bottom: 0\n                    },\n                    seeMoreExpanded: {\n                        position: \"absolute\",\n                        top: 0,\n                        left: 0,\n                        width: \"100%\",\n                        height: \"100%\",\n                        boxSizing: \"border-box\",\n                        zIndex: 99999\n                    },\n                    seeMoreText: {\n                        color: \"white\",\n                        textAlign: \"center\",\n                        letterSpacing: \"0.1em\",\n                        marginBottom: \"2.2vh\",\n                        textTransform: \"capitalize\",\n                        opacity: \"1\",\n                        fontSize: \"0.8em\",\n                        transition: \"opacity 300ms ease-in-out\"\n                    },\n                    seeMoreIcon: {\n                        color: \"white\",\n                        textAlign: \"center\",\n                        letterSpacing: \"0.2em\",\n                        marginBottom: \"0.4vh\",\n                        opacity: \"1\",\n                        filter: \"drop-shadow(0 0 5px black)\",\n                        textTransform: \"capitalize\",\n                        transition: \"opacity 300ms ease-in-out\"\n                    },\n                    seeMoreClose: {\n                        position: \"absolute\",\n                        filter: \"drop-shadow(0 3px 2px #ccc)\",\n                        right: \"0.5rem\",\n                        top: \"0.5rem\",\n                        fontSize: \"1.5rem\",\n                        opacity: \"0.7\",\n                        padding: \"1rem\"\n                    }\n                };\n            /***/ },\n            /***/ 353: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_49292__) {\n                var __importDefault = this && this.__importDefault || function(mod) {\n                    return mod && mod.__esModule ? mod : {\n                        \"default\": mod\n                    };\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                var react_1 = __importDefault(__nested_webpack_require_49292__(639));\n                var puff_svg_1 = __importDefault(__nested_webpack_require_49292__(931));\n                var Spinner = function Spinner() {\n                    return react_1[\"default\"].createElement(puff_svg_1[\"default\"], null);\n                };\n                exports1[\"default\"] = Spinner;\n            /***/ },\n            /***/ 832: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_50107__) {\n                var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    var desc = Object.getOwnPropertyDescriptor(m, k);\n                    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n                        desc = {\n                            enumerable: true,\n                            get: function get() {\n                                return m[k];\n                            }\n                        };\n                    }\n                    Object.defineProperty(o, k2, desc);\n                } : function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    o[k2] = m[k];\n                });\n                var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n                    Object.defineProperty(o, \"default\", {\n                        enumerable: true,\n                        value: v\n                    });\n                } : function(o, v) {\n                    o[\"default\"] = v;\n                });\n                var __importStar = this && this.__importStar || function(mod) {\n                    if (mod && mod.__esModule) return mod;\n                    var result = {};\n                    if (mod != null) {\n                        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n                    }\n                    __setModuleDefault(result, mod);\n                    return result;\n                };\n                var __importDefault = this && this.__importDefault || function(mod) {\n                    return mod && mod.__esModule ? mod : {\n                        \"default\": mod\n                    };\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                var react_1 = __importStar(__nested_webpack_require_50107__(639));\n                var Global_1 = __importDefault(__nested_webpack_require_50107__(267));\n                var Story = function Story(props) {\n                    var globalContext = (0, react_1.useContext)(Global_1[\"default\"]);\n                    var width = globalContext.width, height = globalContext.height, loader = globalContext.loader, header = globalContext.header, storyStyles = globalContext.storyStyles, _globalContext$storyI = globalContext.storyInnerContainerStyles, storyInnerContainerStyles = _globalContext$storyI === void 0 ? {} : _globalContext$storyI;\n                    var rendererMessageHandler = function rendererMessageHandler(type, data) {\n                        switch(type){\n                            case \"UPDATE_VIDEO_DURATION\":\n                                props.getVideoDuration(data.duration);\n                                return {\n                                    ack: \"OK\"\n                                };\n                        }\n                    };\n                    var getStoryContent = function getStoryContent() {\n                        var InnerContent = props.story.content;\n                        var config = {\n                            width: width,\n                            height: height,\n                            loader: loader,\n                            header: header,\n                            storyStyles: storyStyles\n                        };\n                        return react_1[\"default\"].createElement(InnerContent, {\n                            action: props.action,\n                            isPaused: props.playState,\n                            story: props.story,\n                            config: config,\n                            messageHandler: rendererMessageHandler\n                        });\n                    };\n                    return react_1[\"default\"].createElement(\"div\", {\n                        style: Object.assign(Object.assign(Object.assign({}, styles.story), storyInnerContainerStyles), {\n                            width: width,\n                            height: height\n                        })\n                    }, getStoryContent());\n                };\n                var styles = {\n                    story: {\n                        display: \"flex\",\n                        position: \"relative\",\n                        overflow: \"hidden\",\n                        alignItems: \"center\"\n                    },\n                    storyContent: {\n                        width: \"auto\",\n                        maxWidth: \"100%\",\n                        maxHeight: \"100%\",\n                        margin: \"auto\"\n                    }\n                };\n                exports1[\"default\"] = Story;\n            /***/ },\n            /***/ 267: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_54998__) {\n                var __importDefault = this && this.__importDefault || function(mod) {\n                    return mod && mod.__esModule ? mod : {\n                        \"default\": mod\n                    };\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                exports1.initialContext = void 0;\n                var react_1 = __importDefault(__nested_webpack_require_54998__(639));\n                exports1.initialContext = {\n                    defaultInterval: 4000,\n                    width: 360,\n                    height: 640\n                };\n                var GlobalContext = react_1[\"default\"].createContext(exports1.initialContext);\n                exports1[\"default\"] = GlobalContext;\n            /***/ },\n            /***/ 552: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_55898__) {\n                var __importDefault = this && this.__importDefault || function(mod) {\n                    return mod && mod.__esModule ? mod : {\n                        \"default\": mod\n                    };\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                var react_1 = __importDefault(__nested_webpack_require_55898__(639));\n                exports1[\"default\"] = react_1[\"default\"].createContext({\n                    currentId: 0,\n                    videoDuration: 0,\n                    bufferAction: false,\n                    pause: false,\n                    next: function next() {}\n                });\n            /***/ },\n            /***/ 486: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_56715__) {\n                var __importDefault = this && this.__importDefault || function(mod) {\n                    return mod && mod.__esModule ? mod : {\n                        \"default\": mod\n                    };\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                exports1.initialContext = void 0;\n                var react_1 = __importDefault(__nested_webpack_require_56715__(639));\n                exports1.initialContext = {\n                    stories: []\n                };\n                var StoriesContext = react_1[\"default\"].createContext(exports1.initialContext);\n                exports1[\"default\"] = StoriesContext;\n            /***/ },\n            /***/ 370: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_57542__) {\n                function _typeof(obj) {\n                    \"@babel/helpers - typeof\";\n                    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n                        return typeof obj;\n                    } : function(obj) {\n                        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                    }, _typeof(obj);\n                }\n                function _slicedToArray(arr, i) {\n                    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n                }\n                function _nonIterableRest() {\n                    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n                }\n                function _unsupportedIterableToArray(o, minLen) {\n                    if (!o) return;\n                    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n                    var n = Object.prototype.toString.call(o).slice(8, -1);\n                    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n                    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n                    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n                }\n                function _arrayLikeToArray(arr, len) {\n                    if (len == null || len > arr.length) len = arr.length;\n                    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n                    return arr2;\n                }\n                function _iterableToArrayLimit(arr, i) {\n                    var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n                    if (null != _i) {\n                        var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;\n                        try {\n                            if (_x = (_i = _i.call(arr)).next, 0 === i) {\n                                if (Object(_i) !== _i) return;\n                                _n = !1;\n                            } else for(; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n                        } catch (err) {\n                            _d = !0, _e = err;\n                        } finally{\n                            try {\n                                if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n                            } finally{\n                                if (_d) throw _e;\n                            }\n                        }\n                        return _arr;\n                    }\n                }\n                function _arrayWithHoles(arr) {\n                    if (Array.isArray(arr)) return arr;\n                }\n                var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    var desc = Object.getOwnPropertyDescriptor(m, k);\n                    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n                        desc = {\n                            enumerable: true,\n                            get: function get() {\n                                return m[k];\n                            }\n                        };\n                    }\n                    Object.defineProperty(o, k2, desc);\n                } : function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    o[k2] = m[k];\n                });\n                var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n                    Object.defineProperty(o, \"default\", {\n                        enumerable: true,\n                        value: v\n                    });\n                } : function(o, v) {\n                    o[\"default\"] = v;\n                });\n                var __importStar = this && this.__importStar || function(mod) {\n                    if (mod && mod.__esModule) return mod;\n                    var result = {};\n                    if (mod != null) {\n                        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n                    }\n                    __setModuleDefault(result, mod);\n                    return result;\n                };\n                var __importDefault = this && this.__importDefault || function(mod) {\n                    return mod && mod.__esModule ? mod : {\n                        \"default\": mod\n                    };\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                exports1.WithSeeMore = exports1.WithHeader = void 0;\n                var react_1 = __importStar(__nested_webpack_require_57542__(639));\n                var Container_1 = __importDefault(__nested_webpack_require_57542__(120));\n                var Global_1 = __importDefault(__nested_webpack_require_57542__(267));\n                var Stories_1 = __importDefault(__nested_webpack_require_57542__(486));\n                var renderers_1 = __nested_webpack_require_57542__(371);\n                var index_1 = __nested_webpack_require_57542__(942);\n                var withHeader_1 = __importDefault(__nested_webpack_require_57542__(803));\n                var withSeeMore_1 = __importDefault(__nested_webpack_require_57542__(763));\n                var ReactInstaStories = function ReactInstaStories(props) {\n                    var renderers = props.renderers ? props.renderers.concat(index_1.renderers) : index_1.renderers;\n                    var context = {\n                        width: props.width,\n                        height: props.height,\n                        loader: props.loader,\n                        header: props.header,\n                        storyContainerStyles: props.storyContainerStyles,\n                        storyInnerContainerStyles: props.storyInnerContainerStyles,\n                        storyStyles: props.storyStyles,\n                        progressContainerStyles: props.progressContainerStyles,\n                        progressWrapperStyles: props.progressWrapperStyles,\n                        progressStyles: props.progressStyles,\n                        loop: props.loop,\n                        defaultInterval: props.defaultInterval,\n                        isPaused: props.isPaused,\n                        currentIndex: props.currentIndex,\n                        onStoryStart: props.onStoryStart,\n                        onStoryEnd: props.onStoryEnd,\n                        onAllStoriesEnd: props.onAllStoriesEnd,\n                        onNext: props.onNext,\n                        onPrevious: props.onPrevious,\n                        keyboardNavigation: props.keyboardNavigation,\n                        preventDefault: props.preventDefault,\n                        preloadCount: props.preloadCount\n                    };\n                    var _ref = (0, react_1.useState)({\n                        stories: generateStories(props.stories, renderers)\n                    }), _ref2 = _slicedToArray(_ref, 2), stories = _ref2[0], setStories = _ref2[1];\n                    (0, react_1.useEffect)(function() {\n                        setStories({\n                            stories: generateStories(props.stories, renderers)\n                        });\n                    }, [\n                        props.stories,\n                        props.renderers\n                    ]);\n                    return react_1[\"default\"].createElement(Global_1[\"default\"].Provider, {\n                        value: context\n                    }, react_1[\"default\"].createElement(Stories_1[\"default\"].Provider, {\n                        value: stories\n                    }, react_1[\"default\"].createElement(Container_1[\"default\"], null)));\n                };\n                var generateStories = function generateStories(stories, renderers) {\n                    return stories.map(function(s) {\n                        var story = {};\n                        if (typeof s === \"string\") {\n                            story.url = s;\n                            story.type = \"image\";\n                        } else if (_typeof(s) === \"object\") {\n                            story = Object.assign(story, s);\n                        }\n                        var renderer = (0, renderers_1.getRenderer)(story, renderers);\n                        story.originalContent = story.content;\n                        story.content = renderer;\n                        return story;\n                    });\n                };\n                ReactInstaStories.defaultProps = {\n                    width: 360,\n                    height: 640,\n                    defaultInterval: 4000,\n                    preloadCount: 1\n                };\n                exports1.WithHeader = withHeader_1[\"default\"];\n                exports1.WithSeeMore = withSeeMore_1[\"default\"];\n                exports1[\"default\"] = ReactInstaStories;\n            /***/ },\n            /***/ 350: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_66941__) {\n                var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    var desc = Object.getOwnPropertyDescriptor(m, k);\n                    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n                        desc = {\n                            enumerable: true,\n                            get: function get() {\n                                return m[k];\n                            }\n                        };\n                    }\n                    Object.defineProperty(o, k2, desc);\n                } : function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    o[k2] = m[k];\n                });\n                var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n                    Object.defineProperty(o, \"default\", {\n                        enumerable: true,\n                        value: v\n                    });\n                } : function(o, v) {\n                    o[\"default\"] = v;\n                });\n                var __importStar = this && this.__importStar || function(mod) {\n                    if (mod && mod.__esModule) return mod;\n                    var result = {};\n                    if (mod != null) {\n                        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n                    }\n                    __setModuleDefault(result, mod);\n                    return result;\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                exports1.tester = exports1.renderer = void 0;\n                var React = __importStar(__nested_webpack_require_66941__(639));\n                var renderer = function renderer(props) {\n                    React.useEffect(function() {\n                        props.action(\"play\");\n                    }, [\n                        props.story\n                    ]);\n                    var Content = props.story.originalContent;\n                    return React.createElement(Content, Object.assign({}, props));\n                };\n                exports1.renderer = renderer;\n                var tester = function tester(story) {\n                    return {\n                        condition: !!story.content,\n                        priority: 2\n                    };\n                };\n                exports1.tester = tester;\n                exports1[\"default\"] = {\n                    renderer: exports1.renderer,\n                    tester: exports1.tester\n                };\n            /***/ },\n            /***/ 248: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_69802__) {\n                var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    var desc = Object.getOwnPropertyDescriptor(m, k);\n                    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n                        desc = {\n                            enumerable: true,\n                            get: function get() {\n                                return m[k];\n                            }\n                        };\n                    }\n                    Object.defineProperty(o, k2, desc);\n                } : function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    o[k2] = m[k];\n                });\n                var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n                    Object.defineProperty(o, \"default\", {\n                        enumerable: true,\n                        value: v\n                    });\n                } : function(o, v) {\n                    o[\"default\"] = v;\n                });\n                var __importStar = this && this.__importStar || function(mod) {\n                    if (mod && mod.__esModule) return mod;\n                    var result = {};\n                    if (mod != null) {\n                        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n                    }\n                    __setModuleDefault(result, mod);\n                    return result;\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                exports1.tester = exports1.renderer = void 0;\n                var React = __importStar(__nested_webpack_require_69802__(639));\n                var renderer = function renderer(_ref) {\n                    var story = _ref.story, action = _ref.action;\n                    React.useEffect(function() {\n                        action(\"play\");\n                    }, [\n                        story\n                    ]);\n                    return React.createElement(\"div\", {\n                        style: styles.storyContent\n                    }, React.createElement(\"p\", {\n                        style: styles.text\n                    }, \"This story could not be loaded.\"));\n                };\n                exports1.renderer = renderer;\n                var styles = {\n                    storyContent: {\n                        width: \"100%\",\n                        maxHeight: \"100%\",\n                        margin: \"auto\"\n                    },\n                    text: {\n                        textAlign: \"center\",\n                        color: \"white\",\n                        width: \"90%\",\n                        margin: \"auto\"\n                    }\n                };\n                var tester = function tester() {\n                    return {\n                        condition: true,\n                        priority: 1\n                    };\n                };\n                exports1.tester = tester;\n                exports1[\"default\"] = {\n                    renderer: exports1.renderer,\n                    tester: exports1.tester\n                };\n            /***/ },\n            /***/ 209: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_73256__) {\n                function _slicedToArray(arr, i) {\n                    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n                }\n                function _nonIterableRest() {\n                    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n                }\n                function _unsupportedIterableToArray(o, minLen) {\n                    if (!o) return;\n                    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n                    var n = Object.prototype.toString.call(o).slice(8, -1);\n                    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n                    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n                    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n                }\n                function _arrayLikeToArray(arr, len) {\n                    if (len == null || len > arr.length) len = arr.length;\n                    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n                    return arr2;\n                }\n                function _iterableToArrayLimit(arr, i) {\n                    var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n                    if (null != _i) {\n                        var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;\n                        try {\n                            if (_x = (_i = _i.call(arr)).next, 0 === i) {\n                                if (Object(_i) !== _i) return;\n                                _n = !1;\n                            } else for(; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n                        } catch (err) {\n                            _d = !0, _e = err;\n                        } finally{\n                            try {\n                                if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n                            } finally{\n                                if (_d) throw _e;\n                            }\n                        }\n                        return _arr;\n                    }\n                }\n                function _arrayWithHoles(arr) {\n                    if (Array.isArray(arr)) return arr;\n                }\n                var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    var desc = Object.getOwnPropertyDescriptor(m, k);\n                    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n                        desc = {\n                            enumerable: true,\n                            get: function get() {\n                                return m[k];\n                            }\n                        };\n                    }\n                    Object.defineProperty(o, k2, desc);\n                } : function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    o[k2] = m[k];\n                });\n                var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n                    Object.defineProperty(o, \"default\", {\n                        enumerable: true,\n                        value: v\n                    });\n                } : function(o, v) {\n                    o[\"default\"] = v;\n                });\n                var __importStar = this && this.__importStar || function(mod) {\n                    if (mod && mod.__esModule) return mod;\n                    var result = {};\n                    if (mod != null) {\n                        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n                    }\n                    __setModuleDefault(result, mod);\n                    return result;\n                };\n                var __importDefault = this && this.__importDefault || function(mod) {\n                    return mod && mod.__esModule ? mod : {\n                        \"default\": mod\n                    };\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                exports1.tester = exports1.renderer = void 0;\n                var React = __importStar(__nested_webpack_require_73256__(639));\n                var Spinner_1 = __importDefault(__nested_webpack_require_73256__(353));\n                var withHeader_1 = __importDefault(__nested_webpack_require_73256__(803));\n                var withSeeMore_1 = __importDefault(__nested_webpack_require_73256__(763));\n                var renderer = function renderer(_ref) {\n                    var story = _ref.story, action = _ref.action, isPaused = _ref.isPaused, config = _ref.config;\n                    var _React$useState = React.useState(false), _React$useState2 = _slicedToArray(_React$useState, 2), loaded = _React$useState2[0], setLoaded = _React$useState2[1];\n                    var width = config.width, height = config.height, loader = config.loader, storyStyles = config.storyStyles;\n                    var computedStyles = Object.assign(Object.assign({}, styles.storyContent), storyStyles || {});\n                    var imageLoaded = function imageLoaded() {\n                        setLoaded(true);\n                        action(\"play\");\n                    };\n                    return React.createElement(withHeader_1[\"default\"], Object.assign({}, {\n                        story: story,\n                        globalHeader: config.header\n                    }), React.createElement(withSeeMore_1[\"default\"], Object.assign({}, {\n                        story: story,\n                        action: action\n                    }), React.createElement(\"div\", null, React.createElement(\"img\", {\n                        style: computedStyles,\n                        src: story.url,\n                        onLoad: imageLoaded\n                    }), !loaded && React.createElement(\"div\", {\n                        style: {\n                            width: width,\n                            height: height,\n                            position: \"absolute\",\n                            left: 0,\n                            top: 0,\n                            background: \"rgba(0, 0, 0, 0.9)\",\n                            zIndex: 9,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            color: \"#ccc\"\n                        }\n                    }, loader || React.createElement(Spinner_1[\"default\"], null)))));\n                };\n                exports1.renderer = renderer;\n                var styles = {\n                    story: {\n                        display: \"flex\",\n                        position: \"relative\",\n                        overflow: \"hidden\"\n                    },\n                    storyContent: {\n                        width: \"auto\",\n                        maxWidth: \"100%\",\n                        maxHeight: \"100%\",\n                        margin: \"auto\"\n                    }\n                };\n                var tester = function tester(story) {\n                    return {\n                        condition: !story.content && (!story.type || story.type === \"image\"),\n                        priority: 2\n                    };\n                };\n                exports1.tester = tester;\n                exports1[\"default\"] = {\n                    renderer: exports1.renderer,\n                    tester: exports1.tester\n                };\n            /***/ },\n            /***/ 544: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_81268__) {\n                function _slicedToArray(arr, i) {\n                    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n                }\n                function _nonIterableRest() {\n                    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n                }\n                function _unsupportedIterableToArray(o, minLen) {\n                    if (!o) return;\n                    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n                    var n = Object.prototype.toString.call(o).slice(8, -1);\n                    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n                    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n                    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n                }\n                function _arrayLikeToArray(arr, len) {\n                    if (len == null || len > arr.length) len = arr.length;\n                    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n                    return arr2;\n                }\n                function _iterableToArrayLimit(arr, i) {\n                    var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n                    if (null != _i) {\n                        var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;\n                        try {\n                            if (_x = (_i = _i.call(arr)).next, 0 === i) {\n                                if (Object(_i) !== _i) return;\n                                _n = !1;\n                            } else for(; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n                        } catch (err) {\n                            _d = !0, _e = err;\n                        } finally{\n                            try {\n                                if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n                            } finally{\n                                if (_d) throw _e;\n                            }\n                        }\n                        return _arr;\n                    }\n                }\n                function _arrayWithHoles(arr) {\n                    if (Array.isArray(arr)) return arr;\n                }\n                var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    var desc = Object.getOwnPropertyDescriptor(m, k);\n                    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n                        desc = {\n                            enumerable: true,\n                            get: function get() {\n                                return m[k];\n                            }\n                        };\n                    }\n                    Object.defineProperty(o, k2, desc);\n                } : function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    o[k2] = m[k];\n                });\n                var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n                    Object.defineProperty(o, \"default\", {\n                        enumerable: true,\n                        value: v\n                    });\n                } : function(o, v) {\n                    o[\"default\"] = v;\n                });\n                var __importStar = this && this.__importStar || function(mod) {\n                    if (mod && mod.__esModule) return mod;\n                    var result = {};\n                    if (mod != null) {\n                        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n                    }\n                    __setModuleDefault(result, mod);\n                    return result;\n                };\n                var __importDefault = this && this.__importDefault || function(mod) {\n                    return mod && mod.__esModule ? mod : {\n                        \"default\": mod\n                    };\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                exports1.tester = exports1.renderer = void 0;\n                var React = __importStar(__nested_webpack_require_81268__(639));\n                var Spinner_1 = __importDefault(__nested_webpack_require_81268__(353));\n                var withHeader_1 = __importDefault(__nested_webpack_require_81268__(803));\n                var withSeeMore_1 = __importDefault(__nested_webpack_require_81268__(763));\n                var renderer = function renderer(_ref) {\n                    var story = _ref.story, action = _ref.action, isPaused = _ref.isPaused, config = _ref.config, messageHandler = _ref.messageHandler;\n                    var _React$useState = React.useState(false), _React$useState2 = _slicedToArray(_React$useState, 2), loaded = _React$useState2[0], setLoaded = _React$useState2[1];\n                    var _React$useState3 = React.useState(story.muted || false), _React$useState4 = _slicedToArray(_React$useState3, 2), muted = _React$useState4[0], setMuted = _React$useState4[1];\n                    var width = config.width, height = config.height, loader = config.loader, storyStyles = config.storyStyles;\n                    var computedStyles = Object.assign(Object.assign({}, styles.storyContent), storyStyles || {});\n                    var vid = React.useRef(null);\n                    React.useEffect(function() {\n                        if (vid.current) {\n                            if (isPaused) {\n                                vid.current.pause();\n                            } else {\n                                vid.current.play()[\"catch\"](function() {});\n                            }\n                        }\n                    }, [\n                        isPaused\n                    ]);\n                    var onWaiting = function onWaiting() {\n                        action(\"pause\", true);\n                    };\n                    var onPlaying = function onPlaying() {\n                        action(\"play\", true);\n                    };\n                    var videoLoaded = function videoLoaded() {\n                        messageHandler(\"UPDATE_VIDEO_DURATION\", {\n                            duration: vid.current.duration\n                        });\n                        setLoaded(true);\n                        vid.current.play().then(function() {\n                            action(\"play\");\n                        })[\"catch\"](function() {\n                            setMuted(true);\n                            vid.current.play()[\"finally\"](function() {\n                                action(\"play\");\n                            });\n                        });\n                    };\n                    return React.createElement(withHeader_1[\"default\"], Object.assign({}, {\n                        story: story,\n                        globalHeader: config.header\n                    }), React.createElement(withSeeMore_1[\"default\"], Object.assign({}, {\n                        story: story,\n                        action: action\n                    }), React.createElement(\"div\", {\n                        style: styles.videoContainer\n                    }, React.createElement(\"video\", {\n                        ref: vid,\n                        style: computedStyles,\n                        src: story.url,\n                        controls: false,\n                        onLoadedData: videoLoaded,\n                        playsInline: true,\n                        onWaiting: onWaiting,\n                        onPlaying: onPlaying,\n                        muted: muted,\n                        autoPlay: true,\n                        \"webkit-playsinline\": \"true\"\n                    }), !loaded && React.createElement(\"div\", {\n                        style: {\n                            width: width,\n                            height: height,\n                            position: \"absolute\",\n                            left: 0,\n                            top: 0,\n                            background: \"rgba(0, 0, 0, 0.9)\",\n                            zIndex: 9,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            color: \"#ccc\"\n                        }\n                    }, loader || React.createElement(Spinner_1[\"default\"], null)))));\n                };\n                exports1.renderer = renderer;\n                var styles = {\n                    storyContent: {\n                        width: \"auto\",\n                        maxWidth: \"100%\",\n                        maxHeight: \"100%\",\n                        margin: \"auto\"\n                    },\n                    videoContainer: {\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\"\n                    }\n                };\n                var tester = function tester(story) {\n                    return {\n                        condition: story.type === \"video\",\n                        priority: 2\n                    };\n                };\n                exports1.tester = tester;\n                exports1[\"default\"] = {\n                    renderer: exports1.renderer,\n                    tester: exports1.tester\n                };\n            /***/ },\n            /***/ 942: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_91155__) {\n                var __importDefault = this && this.__importDefault || function(mod) {\n                    return mod && mod.__esModule ? mod : {\n                        \"default\": mod\n                    };\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                exports1.renderers = void 0;\n                var Image_1 = __importDefault(__nested_webpack_require_91155__(209));\n                var Video_1 = __importDefault(__nested_webpack_require_91155__(544));\n                var Default_1 = __importDefault(__nested_webpack_require_91155__(248));\n                var AutoPlayContent_1 = __importDefault(__nested_webpack_require_91155__(350));\n                exports1.renderers = [\n                    Image_1[\"default\"],\n                    Video_1[\"default\"],\n                    AutoPlayContent_1[\"default\"],\n                    Default_1[\"default\"]\n                ];\n            /***/ },\n            /***/ 803: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_92192__) {\n                function _typeof(obj) {\n                    \"@babel/helpers - typeof\";\n                    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n                        return typeof obj;\n                    } : function(obj) {\n                        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                    }, _typeof(obj);\n                }\n                var __importDefault = this && this.__importDefault || function(mod) {\n                    return mod && mod.__esModule ? mod : {\n                        \"default\": mod\n                    };\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                var react_1 = __importDefault(__nested_webpack_require_92192__(639));\n                var Header_1 = __importDefault(__nested_webpack_require_92192__(463));\n                var withHeader = function withHeader(_ref) {\n                    var story = _ref.story, globalHeader = _ref.globalHeader, children = _ref.children;\n                    return react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null, children, story.header && react_1[\"default\"].createElement(\"div\", {\n                        style: {\n                            position: \"absolute\",\n                            left: 12,\n                            top: 20,\n                            zIndex: 19\n                        }\n                    }, _typeof(story) === \"object\" ? globalHeader ? globalHeader(story.header) : react_1[\"default\"].createElement(Header_1[\"default\"], {\n                        heading: story.header.heading,\n                        subheading: story.header.subheading,\n                        profileImage: story.header.profileImage\n                    }) : null));\n                };\n                exports1[\"default\"] = withHeader;\n            /***/ },\n            /***/ 763: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_94279__) {\n                function _slicedToArray(arr, i) {\n                    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n                }\n                function _nonIterableRest() {\n                    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n                }\n                function _unsupportedIterableToArray(o, minLen) {\n                    if (!o) return;\n                    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n                    var n = Object.prototype.toString.call(o).slice(8, -1);\n                    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n                    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n                    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n                }\n                function _arrayLikeToArray(arr, len) {\n                    if (len == null || len > arr.length) len = arr.length;\n                    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n                    return arr2;\n                }\n                function _iterableToArrayLimit(arr, i) {\n                    var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n                    if (null != _i) {\n                        var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;\n                        try {\n                            if (_x = (_i = _i.call(arr)).next, 0 === i) {\n                                if (Object(_i) !== _i) return;\n                                _n = !1;\n                            } else for(; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n                        } catch (err) {\n                            _d = !0, _e = err;\n                        } finally{\n                            try {\n                                if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n                            } finally{\n                                if (_d) throw _e;\n                            }\n                        }\n                        return _arr;\n                    }\n                }\n                function _arrayWithHoles(arr) {\n                    if (Array.isArray(arr)) return arr;\n                }\n                var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    var desc = Object.getOwnPropertyDescriptor(m, k);\n                    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n                        desc = {\n                            enumerable: true,\n                            get: function get() {\n                                return m[k];\n                            }\n                        };\n                    }\n                    Object.defineProperty(o, k2, desc);\n                } : function(o, m, k, k2) {\n                    if (k2 === undefined) k2 = k;\n                    o[k2] = m[k];\n                });\n                var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n                    Object.defineProperty(o, \"default\", {\n                        enumerable: true,\n                        value: v\n                    });\n                } : function(o, v) {\n                    o[\"default\"] = v;\n                });\n                var __importStar = this && this.__importStar || function(mod) {\n                    if (mod && mod.__esModule) return mod;\n                    var result = {};\n                    if (mod != null) {\n                        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n                    }\n                    __setModuleDefault(result, mod);\n                    return result;\n                };\n                var __importDefault = this && this.__importDefault || function(mod) {\n                    return mod && mod.__esModule ? mod : {\n                        \"default\": mod\n                    };\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                var react_1 = __importStar(__nested_webpack_require_94279__(639));\n                var SeeMore_1 = __importDefault(__nested_webpack_require_94279__(771));\n                var withSeeMore = function withSeeMore(_ref) {\n                    var story = _ref.story, action = _ref.action, customCollapsed = _ref.customCollapsed, children = _ref.children;\n                    var _ref2 = (0, react_1.useState)(false), _ref3 = _slicedToArray(_ref2, 2), showMore = _ref3[0], setShowMore = _ref3[1];\n                    var toggleMore = function toggleMore(show) {\n                        action(show ? \"pause\" : \"play\");\n                        setShowMore(show);\n                    };\n                    var CollapsedComponent = SeeMore_1[\"default\"];\n                    return react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null, children, story.seeMore && react_1[\"default\"].createElement(\"div\", {\n                        style: {\n                            position: \"absolute\",\n                            margin: \"auto\",\n                            bottom: showMore ? \"unset\" : 0,\n                            zIndex: 9999,\n                            width: \"100%\",\n                            height: showMore ? \"100%\" : \"auto\"\n                        }\n                    }, react_1[\"default\"].createElement(CollapsedComponent, {\n                        action: action,\n                        toggleMore: toggleMore,\n                        showContent: showMore,\n                        seeMoreContent: story.seeMore,\n                        customCollapsed: customCollapsed || story.seeMoreCollapsed\n                    })));\n                };\n                exports1[\"default\"] = withSeeMore;\n            /***/ },\n            /***/ 371: /***/ (__unused_webpack_module, exports1)=>{\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                exports1.getRenderer = void 0;\n                var getRenderer = function getRenderer(story, renderers) {\n                    var probable = renderers.map(function(r) {\n                        return Object.assign(Object.assign({}, r), {\n                            testerResult: r.tester(story)\n                        });\n                    }).filter(function(r) {\n                        return r.testerResult.condition;\n                    });\n                    probable.sort(function(a, b) {\n                        return b.testerResult.priority - a.testerResult.priority;\n                    });\n                    return probable[0].renderer;\n                };\n                exports1.getRenderer = getRenderer;\n            /***/ },\n            /***/ 335: /***/ (__unused_webpack_module, exports1)=>{\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                exports1.timestamp = void 0;\n                function timestamp() {\n                    return window.performance && window.performance.now ? window.performance.now() : new Date().getTime();\n                }\n                exports1.timestamp = timestamp;\n            /***/ },\n            /***/ 342: /***/ (__unused_webpack_module, exports1, __nested_webpack_require_102047__)=>{\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                var react_1 = __nested_webpack_require_102047__(639);\n                function useIsMounted() {\n                    var isMounted = (0, react_1.useRef)(false);\n                    (0, react_1.useEffect)(function() {\n                        isMounted.current = true;\n                        return function() {\n                            isMounted.current = false;\n                        };\n                    }, []);\n                    return (0, react_1.useCallback)(function() {\n                        return isMounted.current;\n                    }, []);\n                }\n                exports1[\"default\"] = useIsMounted;\n            /***/ },\n            /***/ 402: /***/ function(__unused_webpack_module, exports1, __nested_webpack_require_102916__) {\n                function _typeof(obj) {\n                    \"@babel/helpers - typeof\";\n                    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n                        return typeof obj;\n                    } : function(obj) {\n                        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                    }, _typeof(obj);\n                }\n                function _regeneratorRuntime() {\n                    \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ \n                    _regeneratorRuntime = function _regeneratorRuntime() {\n                        return exports1;\n                    };\n                    var exports1 = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function(obj, key, desc) {\n                        obj[key] = desc.value;\n                    }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n                    function define1(obj, key, value) {\n                        return Object.defineProperty(obj, key, {\n                            value: value,\n                            enumerable: !0,\n                            configurable: !0,\n                            writable: !0\n                        }), obj[key];\n                    }\n                    try {\n                        define1({}, \"\");\n                    } catch (err) {\n                        define1 = function define1(obj, key, value) {\n                            return obj[key] = value;\n                        };\n                    }\n                    function wrap(innerFn, outerFn, self, tryLocsList) {\n                        var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []);\n                        return defineProperty(generator, \"_invoke\", {\n                            value: makeInvokeMethod(innerFn, self, context)\n                        }), generator;\n                    }\n                    function tryCatch(fn, obj, arg) {\n                        try {\n                            return {\n                                type: \"normal\",\n                                arg: fn.call(obj, arg)\n                            };\n                        } catch (err) {\n                            return {\n                                type: \"throw\",\n                                arg: err\n                            };\n                        }\n                    }\n                    exports1.wrap = wrap;\n                    var ContinueSentinel = {};\n                    function Generator() {}\n                    function GeneratorFunction() {}\n                    function GeneratorFunctionPrototype() {}\n                    var IteratorPrototype = {};\n                    define1(IteratorPrototype, iteratorSymbol, function() {\n                        return this;\n                    });\n                    var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n                    NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n                    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n                    function defineIteratorMethods(prototype) {\n                        [\n                            \"next\",\n                            \"throw\",\n                            \"return\"\n                        ].forEach(function(method) {\n                            define1(prototype, method, function(arg) {\n                                return this._invoke(method, arg);\n                            });\n                        });\n                    }\n                    function AsyncIterator(generator, PromiseImpl) {\n                        function invoke(method, arg, resolve, reject) {\n                            var record = tryCatch(generator[method], generator, arg);\n                            if (\"throw\" !== record.type) {\n                                var result = record.arg, value = result.value;\n                                return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function(value) {\n                                    invoke(\"next\", value, resolve, reject);\n                                }, function(err) {\n                                    invoke(\"throw\", err, resolve, reject);\n                                }) : PromiseImpl.resolve(value).then(function(unwrapped) {\n                                    result.value = unwrapped, resolve(result);\n                                }, function(error) {\n                                    return invoke(\"throw\", error, resolve, reject);\n                                });\n                            }\n                            reject(record.arg);\n                        }\n                        var previousPromise;\n                        defineProperty(this, \"_invoke\", {\n                            value: function value(method, arg) {\n                                function callInvokeWithMethodAndArg() {\n                                    return new PromiseImpl(function(resolve, reject) {\n                                        invoke(method, arg, resolve, reject);\n                                    });\n                                }\n                                return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n                            }\n                        });\n                    }\n                    function makeInvokeMethod(innerFn, self, context) {\n                        var state = \"suspendedStart\";\n                        return function(method, arg) {\n                            if (\"executing\" === state) throw new Error(\"Generator is already running\");\n                            if (\"completed\" === state) {\n                                if (\"throw\" === method) throw arg;\n                                return doneResult();\n                            }\n                            for(context.method = method, context.arg = arg;;){\n                                var delegate = context.delegate;\n                                if (delegate) {\n                                    var delegateResult = maybeInvokeDelegate(delegate, context);\n                                    if (delegateResult) {\n                                        if (delegateResult === ContinueSentinel) continue;\n                                        return delegateResult;\n                                    }\n                                }\n                                if (\"next\" === context.method) context.sent = context._sent = context.arg;\n                                else if (\"throw\" === context.method) {\n                                    if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n                                    context.dispatchException(context.arg);\n                                } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n                                state = \"executing\";\n                                var record = tryCatch(innerFn, self, context);\n                                if (\"normal\" === record.type) {\n                                    if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n                                    return {\n                                        value: record.arg,\n                                        done: context.done\n                                    };\n                                }\n                                \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n                            }\n                        };\n                    }\n                    function maybeInvokeDelegate(delegate, context) {\n                        var methodName = context.method, method = delegate.iterator[methodName];\n                        if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n                        var record = tryCatch(method, delegate.iterator, context.arg);\n                        if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n                        var info = record.arg;\n                        return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n                    }\n                    function pushTryEntry(locs) {\n                        var entry = {\n                            tryLoc: locs[0]\n                        };\n                        1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n                    }\n                    function resetTryEntry(entry) {\n                        var record = entry.completion || {};\n                        record.type = \"normal\", delete record.arg, entry.completion = record;\n                    }\n                    function Context(tryLocsList) {\n                        this.tryEntries = [\n                            {\n                                tryLoc: \"root\"\n                            }\n                        ], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n                    }\n                    function values(iterable) {\n                        if (iterable) {\n                            var iteratorMethod = iterable[iteratorSymbol];\n                            if (iteratorMethod) return iteratorMethod.call(iterable);\n                            if (\"function\" == typeof iterable.next) return iterable;\n                            if (!isNaN(iterable.length)) {\n                                var i = -1, next = function next() {\n                                    for(; ++i < iterable.length;)if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n                                    return next.value = undefined, next.done = !0, next;\n                                };\n                                return next.next = next;\n                            }\n                        }\n                        return {\n                            next: doneResult\n                        };\n                    }\n                    function doneResult() {\n                        return {\n                            value: undefined,\n                            done: !0\n                        };\n                    }\n                    return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n                        value: GeneratorFunctionPrototype,\n                        configurable: !0\n                    }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n                        value: GeneratorFunction,\n                        configurable: !0\n                    }), GeneratorFunction.displayName = define1(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports1.isGeneratorFunction = function(genFun) {\n                        var ctor = \"function\" == typeof genFun && genFun.constructor;\n                        return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n                    }, exports1.mark = function(genFun) {\n                        return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define1(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n                    }, exports1.awrap = function(arg) {\n                        return {\n                            __await: arg\n                        };\n                    }, defineIteratorMethods(AsyncIterator.prototype), define1(AsyncIterator.prototype, asyncIteratorSymbol, function() {\n                        return this;\n                    }), exports1.AsyncIterator = AsyncIterator, exports1.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n                        void 0 === PromiseImpl && (PromiseImpl = Promise);\n                        var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n                        return exports1.isGeneratorFunction(outerFn) ? iter : iter.next().then(function(result) {\n                            return result.done ? result.value : iter.next();\n                        });\n                    }, defineIteratorMethods(Gp), define1(Gp, toStringTagSymbol, \"Generator\"), define1(Gp, iteratorSymbol, function() {\n                        return this;\n                    }), define1(Gp, \"toString\", function() {\n                        return \"[object Generator]\";\n                    }), exports1.keys = function(val) {\n                        var object = Object(val), keys = [];\n                        for(var key in object)keys.push(key);\n                        return keys.reverse(), function next() {\n                            for(; keys.length;){\n                                var key = keys.pop();\n                                if (key in object) return next.value = key, next.done = !1, next;\n                            }\n                            return next.done = !0, next;\n                        };\n                    }, exports1.values = values, Context.prototype = {\n                        constructor: Context,\n                        reset: function reset(skipTempReset) {\n                            if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for(var name in this)\"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n                        },\n                        stop: function stop() {\n                            this.done = !0;\n                            var rootRecord = this.tryEntries[0].completion;\n                            if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n                            return this.rval;\n                        },\n                        dispatchException: function dispatchException(exception) {\n                            if (this.done) throw exception;\n                            var context = this;\n                            function handle(loc, caught) {\n                                return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n                            }\n                            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                                var entry = this.tryEntries[i], record = entry.completion;\n                                if (\"root\" === entry.tryLoc) return handle(\"end\");\n                                if (entry.tryLoc <= this.prev) {\n                                    var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\");\n                                    if (hasCatch && hasFinally) {\n                                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n                                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n                                    } else if (hasCatch) {\n                                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n                                    } else {\n                                        if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n                                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n                                    }\n                                }\n                            }\n                        },\n                        abrupt: function abrupt(type, arg) {\n                            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                                var entry = this.tryEntries[i];\n                                if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n                                    var finallyEntry = entry;\n                                    break;\n                                }\n                            }\n                            finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n                            var record = finallyEntry ? finallyEntry.completion : {};\n                            return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n                        },\n                        complete: function complete(record, afterLoc) {\n                            if (\"throw\" === record.type) throw record.arg;\n                            return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n                        },\n                        finish: function finish(finallyLoc) {\n                            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                                var entry = this.tryEntries[i];\n                                if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n                            }\n                        },\n                        \"catch\": function _catch(tryLoc) {\n                            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                                var entry = this.tryEntries[i];\n                                if (entry.tryLoc === tryLoc) {\n                                    var record = entry.completion;\n                                    if (\"throw\" === record.type) {\n                                        var thrown = record.arg;\n                                        resetTryEntry(entry);\n                                    }\n                                    return thrown;\n                                }\n                            }\n                            throw new Error(\"illegal catch attempt\");\n                        },\n                        delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n                            return this.delegate = {\n                                iterator: values(iterable),\n                                resultName: resultName,\n                                nextLoc: nextLoc\n                            }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n                        }\n                    }, exports1;\n                }\n                var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {\n                    function adopt(value) {\n                        return value instanceof P ? value : new P(function(resolve) {\n                            resolve(value);\n                        });\n                    }\n                    return new (P || (P = Promise))(function(resolve, reject) {\n                        function fulfilled(value) {\n                            try {\n                                step(generator.next(value));\n                            } catch (e) {\n                                reject(e);\n                            }\n                        }\n                        function rejected(value) {\n                            try {\n                                step(generator[\"throw\"](value));\n                            } catch (e) {\n                                reject(e);\n                            }\n                        }\n                        function step(result) {\n                            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n                        }\n                        step((generator = generator.apply(thisArg, _arguments || [])).next());\n                    });\n                };\n                Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n                exports1.usePreLoader = void 0;\n                var react_1 = __nested_webpack_require_102916__(639);\n                // Caches given Story[] using HTMLImageElement and HTMLVideoElement\n                var cacheContent = function cacheContent(contents) {\n                    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/ _regeneratorRuntime().mark(function _callee() {\n                        var promises;\n                        return _regeneratorRuntime().wrap(function _callee$(_context) {\n                            while(1)switch(_context.prev = _context.next){\n                                case 0:\n                                    promises = contents.map(function(content) {\n                                        return new Promise(function(resolve, reject) {\n                                            if (!content.url) return;\n                                            if (content.type === \"video\") {\n                                                var video = document.createElement(\"video\");\n                                                video.src = content.url;\n                                                video.onloadeddata = resolve;\n                                                video.onerror = reject;\n                                                return;\n                                            }\n                                            var img = new Image();\n                                            img.src = content.url;\n                                            img.onload = resolve;\n                                            img.onerror = reject;\n                                        });\n                                    });\n                                    _context.next = 3;\n                                    return Promise.all(promises);\n                                case 3:\n                                case \"end\":\n                                    return _context.stop();\n                            }\n                        }, _callee);\n                    }));\n                };\n                // Keeps track of urls that have been loaded\n                var urlsLoaded = new Set();\n                // Pushes urls to urlsLoaded\n                var markUrlsLoaded = function markUrlsLoaded(contents) {\n                    contents.forEach(function(content) {\n                        urlsLoaded.add(content.url);\n                    });\n                };\n                // Returns true if given Story should be preloaded\n                var shouldPreload = function shouldPreload(content) {\n                    if (!content.url) return false;\n                    if (urlsLoaded.has(content.url)) return false;\n                    if (content.preloadResource !== undefined) return content.preloadResource;\n                    if (content.type === \"video\") return false;\n                    return true;\n                };\n                // Preloads images and videos from given Story[] using a cursor and preloadCount\n                // Preload count is the number of images/videos to preload after the cursor\n                // Cursor is the current index to start preloading from\n                var usePreLoader = function usePreLoader(contents, cursor, preloadCount) {\n                    (0, react_1.useEffect)(function() {\n                        var start = cursor + 1;\n                        var end = cursor + preloadCount + 1;\n                        var toPreload = contents.slice(start, end).filter(shouldPreload);\n                        markUrlsLoaded(toPreload);\n                        cacheContent(toPreload);\n                    }, [\n                        cursor,\n                        preloadCount,\n                        contents\n                    ]);\n                };\n                exports1.usePreLoader = usePreLoader;\n            /***/ },\n            /***/ 639: /***/ (module1)=>{\n                module1.exports = __WEBPACK_EXTERNAL_MODULE__639__;\n            /***/ }\n        };\n        /************************************************************************/ /******/ // The module cache\n        /******/ var __webpack_module_cache__ = {};\n        /******/ /******/ // The require function\n        /******/ function __nested_webpack_require_129170__(moduleId) {\n            /******/ // Check if module is in cache\n            /******/ var cachedModule = __webpack_module_cache__[moduleId];\n            /******/ if (cachedModule !== undefined) {\n                /******/ return cachedModule.exports;\n            /******/ }\n            /******/ // Create a new module (and put it into the cache)\n            /******/ var module1 = __webpack_module_cache__[moduleId] = {\n                /******/ // no module.id needed\n                /******/ // no module.loaded needed\n                /******/ exports: {}\n            };\n            /******/ /******/ // Execute the module function\n            /******/ __webpack_modules__[moduleId].call(module1.exports, module1, module1.exports, __nested_webpack_require_129170__);\n            /******/ /******/ // Return the exports of the module\n            /******/ return module1.exports;\n        /******/ }\n        /******/ /************************************************************************/ /******/ /* webpack/runtime/compat get default export */ /******/ (()=>{\n            /******/ // getDefaultExport function for compatibility with non-harmony modules\n            /******/ __nested_webpack_require_129170__.n = (module1)=>{\n                /******/ var getter = module1 && module1.__esModule ? /******/ ()=>module1[\"default\"] : /******/ ()=>module1;\n                /******/ __nested_webpack_require_129170__.d(getter, {\n                    a: getter\n                });\n                /******/ return getter;\n            /******/ };\n        /******/ })();\n        /******/ /******/ /* webpack/runtime/define property getters */ /******/ (()=>{\n            /******/ // define getter functions for harmony exports\n            /******/ __nested_webpack_require_129170__.d = (exports1, definition)=>{\n                /******/ for(var key in definition){\n                    /******/ if (__nested_webpack_require_129170__.o(definition, key) && !__nested_webpack_require_129170__.o(exports1, key)) {\n                        /******/ Object.defineProperty(exports1, key, {\n                            enumerable: true,\n                            get: definition[key]\n                        });\n                    /******/ }\n                /******/ }\n            /******/ };\n        /******/ })();\n        /******/ /******/ /* webpack/runtime/hasOwnProperty shorthand */ /******/ (()=>{\n            /******/ __nested_webpack_require_129170__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);\n        /******/ })();\n        /******/ /******/ /* webpack/runtime/make namespace object */ /******/ (()=>{\n            /******/ // define __esModule on exports\n            /******/ __nested_webpack_require_129170__.r = (exports1)=>{\n                /******/ if (typeof Symbol !== \"undefined\" && Symbol.toStringTag) {\n                    /******/ Object.defineProperty(exports1, Symbol.toStringTag, {\n                        value: \"Module\"\n                    });\n                /******/ }\n                /******/ Object.defineProperty(exports1, \"__esModule\", {\n                    value: true\n                });\n            /******/ };\n        /******/ })();\n        /******/ /************************************************************************/ /******/ /******/ // startup\n        /******/ // Load entry module and return exports\n        /******/ // This entry module is referenced by other modules so it can't be inlined\n        /******/ var __nested_webpack_exports__ = __nested_webpack_require_129170__(370);\n        /******/ /******/ return __nested_webpack_exports__;\n    /******/ })();\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-insta-stories/dist/index.js\n");

/***/ })

};
;